stages:
  - linter
  - fetch
  - build
  - run-test

.arm-config:
  variables:
    TARGET_ARCH: "arm"
    MACHINE_NAME: "qemuarm"

.amd64-config:
  variables:
    TARGET_ARCH: "amd64"
    MACHINE_NAME: "qemux86"

linter:
  stage: linter
  script:
    - source scripts/linter.sh commit-msg
    - source scripts/linter.sh json
  interruptible: true

fetch-qemuarm:
  extends: .arm-config
  stage: fetch
  script:
    - bash yocto/build.sh meta-fetch ${CI_COMMIT_REF_NAME}
    - bash yocto/build.sh bitbake-fetch master
  interruptible: false

fetch-qemux86:
  extends: .amd64-config
  stage: fetch
  script:
    - bash yocto/build.sh meta-fetch ${CI_COMMIT_REF_NAME}
    - bash yocto/build.sh bitbake-fetch master 
  interruptible: false

build-qemuarm:
  extends: .arm-config
  stage: build
  script:
    - bash yocto/build.sh build master
    - bash yocto/build.sh take-release
  interruptible: false
  dependencies:
    - fetch-qemuarm
  artifacts:
    paths:
      - deploy.tar.gz
    when: on_success
    expire_in: 15 mins

build-qemux86:
  extends: .amd64-config
  stage: build
  script:
    - bash yocto/build.sh build master
    - bash yocto/build.sh take-release
  interruptible: false
  dependencies:
    - fetch-qemux86
  artifacts:
    paths:
      - deploy.tar.gz
    when: on_success
    expire_in: 15 mins

run-qemuarm:
  extends: .arm-config
  stage: run-test
  script:
  - bash yocto/build.sh runqemu
  - bash yocto/test.sh runqemu
  interruptible: true
  dependencies:
    - build-qemuarm
  timeout: 5m

run-qemux86:
  extends: .amd64-config
  stage: run-test
  script:
  - bash yocto/build.sh runqemu
  - bash yocto/test.sh runqemu
  interruptible: true
  dependencies:
    - build-qemux86
  timeout: 5m